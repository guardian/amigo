{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AMIgo, an AMI bakery",
  "Parameters": {
    "Stage": {
      "Description": "Stage name",
      "Type": "String",
      "Default": "PROD"
    },
    "VPC": {
      "Description": "Virtual Private Cloud to run EC2 instances within",
      "Type": "AWS::EC2::VPC::Id"
    },
    "Subnets": {
      "Description": "Subnets to run load balancer within",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "AMI": {
      "Description": "AMI ID",
      "Type": "String",
      "Default": "ami-6b50e218"
    },
    "PackerVersion": {
      "Description": "What version of Packer to install",
      "Type": "String",
      "Default": "0.8.6"
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "A key pair for SSH'ing into the instance"
    },
    "TLSCert": {
      "Type": "String", 
      "Description": "ARN of a TLS certificate to install on the load balancer"
    }
  },
  "Resources": {
    "RootRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "UserDataPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "download-artifacts-from-s3",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [ "s3:GetObject" ],
              "Resource": [ "arn:aws:s3::*:deploy-tools-dist/*" ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "RootRole"
          }
        ]
      }
    },
    "AmigoAppPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "amigo-app",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [ "dynamodb:ListTables" ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [ "dynamodb:*" ],
              "Resource": { "Fn::Join": [ "-", ["arn:aws:dynamodb:*:*:table/amigo", { "Ref": "Stage" }, "*" ] ] } 
            },
            {
              "Effect": "Allow",
              "Action": [ "dynamodb:DescribeTable", "dynamodb:GetItem" ],
              "Resource": "arn:aws:dynamodb:*:*:table/config-deploy" 
            },
            {
                "Effect": "Allow",
                "Action": "ec2:DescribeTags",
                "Resource": "*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "RootRole"
          }
        ]
      }
    },
    "PackerPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "packer-required-permissions",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:AttachVolume",
                "ec2:CreateVolume",
                "ec2:DeleteVolume",
                "ec2:CreateKeypair",
                "ec2:DeleteKeypair",
                "ec2:DescribeSubnets",
                "ec2:CreateSecurityGroup",
                "ec2:DeleteSecurityGroup",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateImage",
                "ec2:CopyImage",
                "ec2:RunInstances",
                "ec2:TerminateInstances",
                "ec2:StopInstances",
                "ec2:DescribeVolumes",
                "ec2:DetachVolume",
                "ec2:DescribeInstances",
                "ec2:CreateSnapshot",
                "ec2:DeleteSnapshot",
                "ec2:DescribeSnapshots",
                "ec2:DescribeImages",
                "ec2:RegisterImage",
                "ec2:CreateTags",
                "ec2:ModifyImageAttribute"
              ],
              "Resource": "*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "RootRole"
          }
        ]
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "RootRole"
          }
        ]
      }
    },
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Ref": "LoadBalancerSecurityGroup"
          }
        ],
        "Subnets": {
          "Ref": "Subnets"
        },
        "CrossZone": true,
        "Listeners": [
          {
            "Protocol": "HTTP",
            "LoadBalancerPort": "80",
            "InstancePort": "9000"
          },
          {
            "Protocol": "HTTPS",
            "LoadBalancerPort": "443",
            "InstancePort": "9000",
            "SSLCertificateId": { "Ref": "TLSCert" }
          }
        ],
        "HealthCheck": {
          "Target": "HTTP:9000/healthcheck",
          "Timeout": "5",
          "Interval": "10",
          "UnhealthyThreshold": "2",
          "HealthyThreshold": "2"
        }
      }
    },
    "AutoscalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "VPCZoneIdentifier": {
          "Ref": "Subnets"
        },
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": "1",
        "MaxSize": "2",
        "HealthCheckType": "ELB",
        "HealthCheckGracePeriod": 300,
        "LoadBalancerNames": [
          {
            "Ref": "LoadBalancer"
          }
        ],
        "Tags": [
          {
            "Key": "Stage",
            "PropagateAtLaunch": "true",
            "Value": {
              "Ref": "Stage"
            }
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": "true",
            "Value": "deploy"
          },
          {
            "Key": "App",
            "PropagateAtLaunch": "true",
            "Value": "amigo"
          }
        ]
      }
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "AMI"
        },
        "AssociatePublicIpAddress": true,
        "SecurityGroups": [
          {
            "Ref": "ApplicationSecurityGroup"
          }
        ],
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
          "Ref": "InstanceProfile"
        },
        "KeyName": {
          "Ref": "KeyName"
        }, 
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [ "\n", [
              "#!/bin/bash -ev",

              "adduser --system --home /home/amigo --disabled-password amigo",

              { "Fn::Join": [ "", [ "wget -P /tmp https://releases.hashicorp.com/packer/", { "Ref": "PackerVersion" }, "/packer_", { "Ref": "PackerVersion" }, "_linux_amd64.zip" ] ] },
              "mkdir /opt/packer",
              "unzip -d /opt/packer /tmp/packer_*_linux_amd64.zip",
              "echo 'export PATH=${PATH}:/opt/packer' > /etc/profile.d/packer.sh",

              "aws --region eu-west-1 s3 cp s3://deploy-tools-dist/deploy/PROD/amigo/amigo.service /etc/systemd/system",
              "aws --region eu-west-1 s3 cp s3://deploy-tools-dist/deploy/PROD/amigo/amigo-1.0-SNAPSHOT.tgz /home/amigo",
              "tar -C /home/amigo -x -v -f /home/amigo/amigo-1.0-SNAPSHOT.tgz",
              "mv /home/amigo/amigo-1.0-SNAPSHOT /home/amigo/amigo",
              "mkdir /home/amigo/logs",
              "chown -R amigo /home/amigo",

              "systemctl start amigo"
            ] ]
          }
        }
      }
    },
    "LoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Guardian IP range has access to the load balancer on port 80",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "77.91.248.0/21"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "77.91.248.0/21"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "9000",
            "ToPort": "9000",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "ApplicationSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SSH and HTTP",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "9000",
            "ToPort": "9000",
            "CidrIp": "77.91.248.0/21"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9000",
            "ToPort": "9000",
            "SourceSecurityGroupId": {
              "Ref": "LoadBalancerSecurityGroup"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "77.91.248.0/21"
          }
        ]
      }
    }
  }
}
