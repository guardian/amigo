---
- name: set timezone to Europe/London
  timezone:
    name: Europe/London
# Fixes launching Elasticseach in Docker
# https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
- name: increase mmap limit
  sysctl:
    name: vm.max_map_count
    value: 262144
- name: set max_user_watchers to 8 times default ubuntu level
  sysctl:
    name: fs.inotify.max_user_watches
    value: 65536
- name: create docker group
  group:
    name: docker
- name: create-user
  user:
    name: teamcity
    home: /opt/teamcity
- name: add user to docker group
  user:
    name: teamcity
    group: docker
    append: yes
- name: docker compose
  get_url:
    url: https://github.com/docker/compose/releases/download/1.22.0/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 0555
    checksum: sha256:f679a24b93f291c3bffaff340467494f388c0c251649d640e661d509db9d57e9
- name: set docker to use nexus pull through proxy
  shell: echo '{"registry-mirrors":["https://nexus.gutools.co.uk:8082"]}' > /etc/docker/daemon.json
- name: create etc gu
  file:
    path: /etc/gu
    state: directory
- name: move install vars
  copy:
    src: install_vars
    dest: /etc/gu/install_vars
    owner: root
    group: root
    mode: o+r
- name: create agent directory
  file:
    path: /opt/teamcity/buildAgent
    state: directory
    owner: teamcity
- name: download agent
  get_url:
    url: https://teamcity.gutools.co.uk/update/buildAgent.zip
    dest: /tmp/buildAgent.zip
- name: unzip buildagent
  unarchive:
    src: /tmp/buildAgent.zip
    dest: /opt/teamcity/buildAgent
    owner: teamcity
- name: set home path for agent
  shell: echo 'env.home=/opt/teamcity' >> /opt/teamcity/buildAgent/conf/buildAgent.properties
- name: make agent executable
  file:
    path: /opt/teamcity/buildAgent/bin/agent.sh
    mode: "+x"
- name: install nvm
  shell: |
    set -e
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v{{nvm_version}}/install.sh | bash
    source /opt/teamcity/.nvm/nvm.sh
    nvm install node
    nvm install --lts
  become: yes
  become_user: teamcity
  args:
    executable: /bin/bash
- name: add caches
  import_role:
    name: teamcity-ivy-cache
- name: chown teamcity to teamcity
  file:
    path: /opt/teamcity
    recurse: true
    owner: teamcity
- name: add service
  copy:
    src: teamcityagent.service
    dest: /etc/systemd/system/teamcityagent.service
- name: enable service
  systemd:
    name: teamcityagent
    enabled: yes

# this fixes an issue with running docker on ubuntu bionic, see here for details: https://github.com/moby/libnetwork/issues/2187
- name: disable systemd as default ddns server
  shell: ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf

- name: set default java version (x86) # to get available versions run `update-java-alternatives --list`
  when: ansible_architecture == "x86_64"
  shell: |
    update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
    update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac

- name: set default java version (arm) # to get available versions run `update-java-alternatives --list`
  when: ansible_architecture == "aarch64"
  shell: |
    update-alternatives --set java /usr/lib/jvm/java-8-openjdk-arm64/jre/bin/java
    update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-arm64/bin/javac

# download sbt
- name: Add SBT repo
  become: true
  apt_repository: repo='deb https://repo.scala-sbt.org/scalasbt/debian all main' filename=sbt state=present update_cache=no
- name: Add (old) SBT repo
  become: true
  apt_repository: repo='deb https://repo.scala-sbt.org/scalasbt/debian /' filename=sbt_old state=present update_cache=no
- name: Add SBT repo key
  become: true
  apt_key: keyserver='hkps://keyserver.ubuntu.com' id='2EE0EA64E40A89B84B2DF73499E82A75642AC823'
- name: Install SBT
  become: true
  apt: name=sbt state=present update_cache=yes
- name: Populate SBT
  command: sbt sbtVersion
  become: teamcity
  environment:
    SBT_OPTS: -Xms256M -Xmx512M -Xss2M -XX:MaxMetaspaceSize=512M

- name: ".aws Cleanup Script"
  copy:
    src: awsconfig_cleanup.sh
    dest: /usr/local/bin/awsconfig_cleanup.sh
    mode: 0555
- name: ".aws Cleanup Script sudoers"
  shell: |
    echo "teamcity  ALL=(root) NOPASSWD: /usr/local/bin/awsconfig_cleanup.sh" > /etc/sudoers.d/awscleanup
  become: yes
  become_user: root

# IP address from `dig +short github.com`
# Public key from `ssh-keyscan -t rsa github.com`
- name: add github.com to ssh_known_hosts
  known_hosts:
    name: github.com
    hash_host: false
    key: github.com,140.82.121.3 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    path: /etc/ssh/ssh_known_hosts
    state: present
