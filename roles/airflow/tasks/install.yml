---

- name: Airflow | Ensure Airflow group
  group:
    name: "{{ airflow_group }}"

- name: Airflow | Ensure Airflow user
  user:
    name: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
    shell: /bin/bash

- name: Airflow | Installing dependencies
  yum:
    pkg: "{{ airflow_required_libs }}"
    state: present

- name: Airflow | pip installs
  pip:
    name: ['botocore', 'boto3', 'six', 'gunicorn', 'numpy', 'awscli']
    state: latest
    virtualenv: "{{ airflow_virtualenv_folder }}/"
    virtualenv_python: "{{ airflow_python_path }}"

- name: "Airflow | Installing Airflow {{ airflow_version }}"
  pip:
    name: apache-airflow
    version: "{{ airflow_version }}"
    virtualenv: "{{ airflow_virtualenv_folder }}"
    virtualenv_python: "{{ airflow_python_path }}"
  environment:
    SLUGIFY_USES_TEXT_UNIDECODE: "yes"
  register: airflow_install

- name: Airflow | Installing Airflow Extra Packages
  pip:
    name: apache-airflow[{{ airflow_extra_packages | join(', ') }}]
    version: "{{ airflow_version }}"
    virtualenv: "{{ airflow_virtualenv_folder }}/"
    virtualenv_python: "{{ airflow_python_path }}"

- name: Airflow | ensure psycopg2 is absent (deprecated, superseded with psycopg2-binary)
  pip:
    name: ['psycopg2']
    state: absent
    virtualenv: "{{ airflow_virtualenv_folder }}/"
    virtualenv_python: "{{ airflow_python_path }}"

- name: Airflow | overriding psycopg2 with psycopg2-binary
  pip:
    name: ['psycopg2-binary']
    state: latest
    virtualenv: "{{ airflow_virtualenv_folder }}/"
    virtualenv_python: "{{ airflow_python_path }}"

- name: "Airflow | ensuring {{ airflow_virtualenv_folder }}"
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
  with_items:
    - "{{ airflow_virtualenv_folder }}/"

- name: Airflow | Create path for Airflow home
  file:
    path: "{{ airflow_home }}"
    state: directory
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"

- name: Airflow | airflow extra directories
  file:
    path: "{{ item }}"
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
    state: directory
  with_items:
    - '/run/airflow'
    - '/etc/airflow/dags'

- name: Airflow | Create path for configuration files
  file:
    path: "{{ airflow_environment_file_folder }}"
    state: directory
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"

- name: Airflow | Copy Environment File
  template:
    src: etc/sysconfig/airflow-environment-file.j2
    dest: "{{ airflow_environment_file_folder }}/airflow"
    mode: 0644
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"

- name: Airflow | Copy Daemon scripts
  template:
    src: "lib/systemd/system/{{ item.key }}.service.j2"
    dest: /lib/systemd/system/{{ item.key }}.service
    mode: 0644
  with_dict: "{{ airflow_services }}"
  when: item.value.configure

