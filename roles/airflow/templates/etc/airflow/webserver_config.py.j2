# -*- coding: utf-8 -*-
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

import os
from airflow import configuration as conf
from flask_appbuilder.security.manager import {{ airflow_rbac_security_manager }}

basedir = os.path.abspath(os.path.dirname(__file__))

# The SQLAlchemy connection string.
SQLALCHEMY_DATABASE_URI = conf.get('core', 'SQL_ALCHEMY_CONN')

# Flask-WTF flag for CSRF
CSRF_ENABLED = True

# ----------------------------------------------------
# AUTHENTICATION CONFIG
# ----------------------------------------------------
# For details on how to set up each of the following authentication, see
# http://flask-appbuilder.readthedocs.io/en/latest/security.html# authentication-methods
# for details.

# The authentication type
# AUTH_OID : Is for OpenID
# AUTH_DB : Is for database
# AUTH_LDAP : Is for LDAP
# AUTH_REMOTE_USER : Is for using REMOTE_USER from web server
# AUTH_OAUTH : Is for OAuth
AUTH_TYPE = {{ airflow_rbac_security_manager }}

# Uncomment to setup Full admin role name
AUTH_ROLE_ADMIN = '{{ airflow_rbac_auth_role_admin }}'

# Uncomment to setup Public role name, no authentication needed
AUTH_ROLE_PUBLIC = '{{ airflow_rbac_auth_role_public }}'

# Will allow user self registration
AUTH_USER_REGISTRATION = {{ airflow_rbac_auth_user_registration }}

# The default user self registration role
AUTH_USER_REGISTRATION_ROLE = "{{ airflow_rbac_auth_user_registration_role }}"

{% if airflow_rbac_security_manager == 'AUTH_OAUTH' %}
OAUTH_PROVIDERS = [{
	'name': '{{ airflow_rbac_auth_oauth_name }}',
    'whitelist': conf.get('google', 'domain').split(","),  # optional
    'token_key': '{{ airflow_rbac_auth_oauth_token_key }}',
    'icon':'{{ airflow_rbac_auth_oauth_icon }}',
        'remote_app': {
            'base_url':'https://www.googleapis.com/oauth2/v2/',
            'request_token_params':{
                'scope': 'email profile'
            },
            'access_token_url': 'https://accounts.google.com/o/oauth2/token',
            'authorize_url': 'https://accounts.google.com/o/oauth2/auth',
            'request_token_url': None,
            'consumer_key': conf.get('google', 'client_id'),
            'consumer_secret': conf.get('google', 'client_secret'),
        }
}]
{% endif %}

{% if airflow_rbac_security_manager == 'AUTH_LDAP' %}
# AUTH_LDAP_SERVER = "{{ airflow_rbac_auth_ldap_server }}"
{% endif %}

# When using OpenID Auth, uncomment to setup OpenID providers.
# example for OpenID authentication
# OPENID_PROVIDERS = [
#    { 'name': 'Yahoo', 'url': 'https://me.yahoo.com' },
#    { 'name': 'AOL', 'url': 'http://openid.aol.com/<username>' },
#    { 'name': 'Flickr', 'url': 'http://www.flickr.com/<username>' },
#    { 'name': 'MyOpenID', 'url': 'https://www.myopenid.com' }]

# ----------------------------------------------------
# Theme CONFIG
# ----------------------------------------------------
# Flask App Builder comes up with a number of predefined themes
# that you can use for Apache Airflow.
# http://flask-appbuilder.readthedocs.io/en/latest/customizing.html#changing-themes
# Please make sure to remove "navbar_color" configuration from airflow.cfg
# in order to fully utilize the theme. (or use that property in conjunction with theme)
# APP_THEME = "bootstrap-theme.css"  # default bootstrap
